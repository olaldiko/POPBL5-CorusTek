.TH "rasPi-EmergencyStation/tcpVehicleSocketComm.h" 3 "Thu Jan 21 2016" "Version 0.1" "Emergency station" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rasPi-EmergencyStation/tcpVehicleSocketComm.h \- Vehicle connection server's headers\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <arpa/inet\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <netdb\&.h>\fP
.br
\fC#include 'structures\&.h'\fP
.br
\fC#include 'msgBuffers\&.h'\fP
.br
\fC#include 'messageParser\&.h'\fP
.br
\fC#include 'stationActions\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBVSC_SRV_PORT\fP   6000"
.br
.RI "\fIPort of where the vehicle connection server will listen definition\&. \fP"
.ti -1c
.RI "#define \fBVSC_MAXPENDING\fP   10"
.br
.RI "\fIMax pending messages definition\&. \fP"
.ti -1c
.RI "#define \fBVSC_SOCKBUF_LEN\fP   512"
.br
.RI "\fISize of the receiver buffer\&. \fP"
.ti -1c
.RI "#define \fBVSC_MAXRCV_LEN\fP   510"
.br
.RI "\fIMax size of the received messages stored in the buffer\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBVSC_initVehicleServer\fP ()"
.br
.RI "\fIInitialize the vehicle comunication server\&. \fP"
.ti -1c
.RI "void \fBVSC_acceptConnections\fP ()"
.br
.RI "\fIAccept the new connections from vehicles\&. \fP"
.ti -1c
.RI "void \fBVSC_shutdownVehicleServer\fP ()"
.br
.RI "\fIShutdown the vehicle comunication server\&. \fP"
.ti -1c
.RI "void * \fBVSC_inboundHandlerThreadFunc\fP (void *args)"
.br
.RI "\fIThread to handle the inbound messages from the vehicles\&. \fP"
.ti -1c
.RI "void * \fBVSC_outboundHandlerThreadFunc\fP (void *args)"
.br
.RI "\fIThread to send the messages to the vehicle\&. \fP"
.ti -1c
.RI "int \fBVSC_SendMessageToVehicle\fP (struct \fBMESSAGE\fP *msg, struct \fBSA_VEHICLE_DATA\fP *vehicle)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBVSC_STAT\fP \fBvehicleServerStat\fP"
.br
.RI "\fIStructure containing all the parameters and the status of the vehicle server\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Vehicle connection server's headers\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define VSC_MAXPENDING   10"

.PP
Max pending messages definition\&. 
.SS "#define VSC_MAXRCV_LEN   510"

.PP
Max size of the received messages stored in the buffer\&. 
.SS "#define VSC_SOCKBUF_LEN   512"

.PP
Size of the receiver buffer\&. 
.SS "#define VSC_SRV_PORT   6000"

.PP
Port of where the vehicle connection server will listen definition\&. 
.SH "Function Documentation"
.PP 
.SS "void VSC_acceptConnections ()"

.PP
Accept the new connections from vehicles\&. It accepts the new connection and creates a new thread to listen for the messages from them\&. 
.SS "void* VSC_inboundHandlerThreadFunc (void * args)"

.PP
Thread to handle the inbound messages from the vehicles\&. When a new connection arrives, in the first message sets the handling thread as itself to assign itself as the handling thread to add it to the vehicle structure after the id is know when parsing the message\&. When a disconnection occurs, marks that vehicle as disconnected and the thread exits\&. 
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP The client socket number\&. 
.RE
.PP

.SS "void VSC_initVehicleServer ()"

.PP
Initialize the vehicle comunication server\&. It initializes the needed sockets, binds to an interface and listens for connections\&. 
.SS "void* VSC_outboundHandlerThreadFunc (void * args)"

.PP
Thread to send the messages to the vehicle\&. It waits for the messages to arrive at the vehicle's outbox and sends them\&. 
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP The vehicle structure with all his information\&. 
.RE
.PP

.SS "int VSC_SendMessageToVehicle (struct \fBMESSAGE\fP * msg, struct \fBSA_VEHICLE_DATA\fP * vehicle)"

.SS "void VSC_shutdownVehicleServer ()"

.PP
Shutdown the vehicle comunication server\&. It tryes to shutdown the vehicle communication server gracefully by shutting down the sockets, setting an exit condition to the threads and waiting for them to exit\&. 
.SH "Variable Documentation"
.PP 
.SS "\fBVSC_STAT\fP vehicleServerStat"

.PP
Structure containing all the parameters and the status of the vehicle server\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Emergency station from the source code\&.
